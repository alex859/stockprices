// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import domain "org.alex859/stockprices/domain"
import mock "github.com/stretchr/testify/mock"

// GoogleFinanceResponseConverter is an autogenerated mock type for the GoogleFinanceResponseConverter type
type GoogleFinanceResponseConverter struct {
	mock.Mock
}

// ConvertToCurrentPrice provides a mock function with given fields: response
func (_m *GoogleFinanceResponseConverter) ConvertToCurrentPrice(response domain.GoogleFinanceResponse) (domain.CurrentPrice, error) {
	ret := _m.Called(response)

	var r0 domain.CurrentPrice
	if rf, ok := ret.Get(0).(func(domain.GoogleFinanceResponse) domain.CurrentPrice); ok {
		r0 = rf(response)
	} else {
		r0 = ret.Get(0).(domain.CurrentPrice)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.GoogleFinanceResponse) error); ok {
		r1 = rf(response)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ConvertToPriceHistory provides a mock function with given fields: response
func (_m *GoogleFinanceResponseConverter) ConvertToPriceHistory(response domain.GoogleFinanceResponse) (domain.PriceHistory, error) {
	ret := _m.Called(response)

	var r0 domain.PriceHistory
	if rf, ok := ret.Get(0).(func(domain.GoogleFinanceResponse) domain.PriceHistory); ok {
		r0 = rf(response)
	} else {
		r0 = ret.Get(0).(domain.PriceHistory)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(domain.GoogleFinanceResponse) error); ok {
		r1 = rf(response)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
